WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:14.360
大家好，在这个视频中我们将了解返回PCG的节点“差异”。

00:00:14.360 --> 00:00:21.940
打开树的静态网格生成器。

00:00:21.940 --> 00:00:37.000
在某些情况下，这些树木会与关卡中的岩石重叠。

00:00:37.000 --> 00:00:50.920
如果您没有看到任何重叠，您可以更改表面采样器的种子。

00:00:50.920 --> 00:01:03.800
在这种情况下，岩石与树木重叠，所以我想删除这些

00:01:03.800 --> 00:01:12.240
岩石。

00:01:12.240 --> 00:01:17.120
这里在调用节点静态网格生成器之前。

00:01:17.120 --> 00:01:24.600
我将删除与树重叠的点。

00:01:24.600 --> 00:01:31.760
我把它拖出来，并发现不同之处。

00:01:31.760 --> 00:01:34.600
然后我将其连接起来。

00:01:34.600 --> 00:01:40.420
并且差分的参数不是点数据。

00:01:40.420 --> 00:01:48.600
此数据类型是空间数据。使用空间数据后，我需要从

00:01:48.600 --> 00:02:02.020
空间数据到点数据。

00:02:02.020 --> 00:02:12.920
我将重新排列这些节点。每当使用节点差异时，你必须始终

00:02:12.920 --> 00:02:20.360
记得将密度函数改为二进制。选择二进制后，此节点

00:02:20.360 --> 00:02:30.240
仍然显示为最低值。

00:02:30.240 --> 00:02:39.480
为了显示单词二进制，我将通过禁用并再次启用此节点来刷新它。

00:02:39.480 --> 00:02:44.380
我想优先考虑树上的点，所以我将删除重叠的点

00:02:44.380 --> 00:02:49.960
用树，从节点变换点的结果。我将使用输出

00:02:49.960 --> 00:02:53.200
在节点静态网格生成器之前。

00:02:53.200 --> 00:03:01.040
因此，我不会使用此节点的输出。在某些情况下它可以工作，但在某些情况下

00:03:01.040 --> 00:03:04.960
在某些情况下它不会按预期工作。

00:03:04.960 --> 00:03:10.480
我将删除此连接。并且始终在节点静态之前使用输出

00:03:10.480 --> 00:03:20.760
网格生成器。

00:03:20.760 --> 00:03:47.440
我将其拖入节点差异中。

00:03:47.440 --> 00:03:52.720
我正在将岩石的点拖入源中。这意味着我将移除点

00:03:52.720 --> 00:03:59.360
岩石，并保留其他物体的点。在这种情况下，它是树木，

00:03:59.360 --> 00:04:07.480
因为我正在将树木拖入差异参数。所以我将保留树木。

00:04:07.480 --> 00:04:17.840
我会优先考虑与差异参数相关的点。并且要考虑水平。

00:04:17.840 --> 00:04:28.400
暂时我不会在这里启用调试。我会隐藏它。在关卡上。我已经删除了

00:04:28.400 --> 00:04:37.800
与树木重叠的岩石。

00:04:37.800 --> 00:04:44.400
我会尝试隐藏节点差异。这是使用差异之前的结果。

00:04:44.400 --> 00:04:54.280
这是使用差值之后的结果。 前后。

00:04:54.280 --> 00:05:01.240
自我修剪也类似。节点差异也取决于边界修饰符。取决于

00:05:01.240 --> 00:05:06.680
关于点的大小。

00:05:06.680 --> 00:05:12.240
在上一个视频中，我调整了岩石的边界。在这个视频中，我将调整

00:05:12.240 --> 00:05:17.320
树的边界。

00:05:17.320 --> 00:05:26.520
这是岩石。所以我将调整树的边界修改器。

00:05:26.520 --> 00:05:33.720
我将向下滚动。在这里我使用变换点。

00:05:33.720 --> 00:05:38.920
我将把它拖出来并调用节点边界修改器。然后我将连接这两个链接

00:05:38.920 --> 00:05:46.680
进入新节点。现在我找到边界修饰符。我想连接这两个链接。所以我将

00:05:46.680 --> 00:05:55.880
按住控制按钮。然后将其拖出。然后我连接它。我将使用边界

00:05:55.880 --> 00:06:05.400
修饰符。在连接到其他案例之前。

00:06:05.400 --> 00:06:10.480
我为这个节点启用了调试。目前，您可以看到树和

00:06:10.480 --> 00:06:21.600
点不匹配。因此我将模式设置为默认比例。我将值更改为

00:06:21.600 --> 00:06:39.280
0.6。0.6。0.6。和0.6。并使点的大小与树干相匹配。

00:06:39.280 --> 00:07:06.720
如果我将其设置为 0.5。那么在这种情况下，我会将其设置为 0.6。对于其他树，例如

00:07:06.720 --> 00:07:15.200
这棵树。点的大小与网格不匹配。因此目前，我将调整

00:07:15.200 --> 00:07:25.040
森林 03 的大小。我将调整边界修饰符以适应最常见的

00:07:25.040 --> 00:07:37.600
树的类型。即森林 03。我将在使用边界修饰符之前进行比较。之后

00:07:37.600 --> 00:07:46.240
使用边界修饰符。我隐藏了此节点的调试。我将检查最终

00:07:46.240 --> 00:08:01.920
结果。我选择调试图标。我有 119 块石头。如果我不使用边界修改器。

00:08:01.920 --> 00:08:20.480
我有 99 块石头。调整树的边界修改器后，我有 119 块石头。

